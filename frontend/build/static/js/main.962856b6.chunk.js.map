{"version":3,"sources":["js/constants/action-types.js","js/reducers/index.js","js/store/store.js","js/store/localStorage.js","js/actions/index.js","js/secrets.js","js/Search.js","js/AuthMenuCustom.js","js/ButtonTrash.js","js/DisplayBooklist.js","js/App.js","js/ButtonBackToMain.js","js/ButtonSave.js","js/SearchResults.js","js/serviceWorker.js","js/Register.js","index.js"],"names":["FETCH_BOOKS","FETCH_BOOKLIST","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_SUCCESS","initialState","booklist","bookresults","loggedIn","loading","error","isFetching","isAuthenticated","user","username","password","rootReducer","state","arguments","length","undefined","action","type","actions","Object","assign","objectSpread","payload","creds","errorMessage","message","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","throttle","stringify","setItem","saveState","getState","fetchBooks","fetchBooklist","loginUser","MY_URL","SearchComponent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","input","isLoading","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","value","_this2","preventDefault","fetch","title","credentials","method","then","response","json","data","react_default","a","createElement","className","onSubmit","FormGroup","FormControl","placeholder","onChange","Link","to","pathname","Button","Component","connect","dispatch","books","CustomToggle","context","handleClick","e","onClick","href","children","React","CustomMenu","style","padding","Children","toArray","filter","child","trim","indexOf","AuthMenuCustom","_this3","showRegisterMessage","handleLogin","handleLogout","_this4","FormData","console","log","body","status","loggedInCallback","_this5","logoutUser","defineProperty","name","Col","xs","authMenuMessage","Dropdown","id","AuthMenuCustom_CustomToggle","bsRole","bsStyle","AuthMenuCustom_CustomMenu","Panel","Body","ButtonToolbar","InputGroup","ButtonGroup","TrashButton","handleTrash","book_id","refreshBooklist","catch","_this$state","bsSize","BooklistComponent","refresh","listBooks","map","b","key","ButtonTrash","Heading","App","js_AuthMenuCustom","Search","DisplayBooklist","BackButton","SaveButton","handleSave","aria-hidden","SearchListComponent","isLoggedIn","ButtonSave","authenticating","handleLogIn","ButtonBackToMain","Boolean","window","location","hostname","match","Register","email","showRegFailMessage","handleRegister","history","goBack","registerMenuMessage","controlId","required","ReactDOM","render","es","BrowserRouter","Switch","Route","exact","path","component","routeInfo","SearchResults","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.962856b6.chunk.js","sourcesContent":["export const FETCH_BOOKS = \"FETCH_BOOKS\";\n\nexport const FETCH_BOOKLIST = \"FETCH_BOOKLIST\";\n\n// export const ADD_BOOK = \"ADD_BOOK\";\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\n\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';","import * as actions from \"../constants/action-types\";\n\nconst initialState = {\n    booklist: [],\n    bookresults: [],\n    loggedIn: false,\n    loading: false,\n    error: null,\n    isFetching: false,\n    isAuthenticated: false,\n    user: null,\n    username: null,\n    password: null\n};\n\nfunction rootReducer(state = initialState, action) {\n\n    if (action.type === actions.FETCH_BOOKS) {\n        return Object.assign({}, state, {\n            ...state,\n            bookresults: action.payload\n            // bookresults: state.bookresults.concat(action.payload)\n        });\n    }\n\n    if (action.type === actions.FETCH_BOOKLIST) {\n        return Object.assign({}, state, {\n            ...state,\n            booklist: action.payload\n            // booklist: state.booklist.concat(action.payload)\n        });\n    }\n\n    // if (action.type === actions.ADD_BOOK) {\n    //     return Object.assign({}, state, {\n    //         ...state,\n    //         // bookresults: action.payload\n    //         booklist: state.booklist.concat(action.payload)\n    //     });\n    // }\n\n    if (action.type === actions.LOGIN_REQUEST) {\n        return Object.assign({}, state, {\n            ...state,\n            loggedIn: false,\n            isFetching: true,\n            isAuthenticated: false,\n            user: action.creds\n        });\n    }\n    if (action.type === actions.LOGIN_SUCCESS) {\n        return Object.assign({}, state, {\n            ...state,\n            loggedIn: true,\n            isFetching: false,\n            isAuthenticated: true,\n            errorMessage: ''\n        });\n    }\n    if (action.type === actions.LOGIN_FAILURE) {\n        return Object.assign({}, state, {\n            ...state,\n            loggedIn: false,\n            isFetching: false,\n            isAuthenticated: false,\n            errorMessage: action.message\n        });\n    }\n    if (action.type === actions.LOGOUT_SUCCESS) {\n        return Object.assign({}, state, {\n            ...state,\n            booklist: [],\n            loggedIn: false,\n            isFetching: true,\n            isAuthenticated: false\n        });\n    }\n\n    return state;\n  }\n\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers/index\";\nimport { loadState, saveState } from \"./localStorage\";\nimport throttle from \"lodash/throttle\";\n\nconst persistedState = loadState();\nconst store = createStore(\n    rootReducer, \n    persistedState,\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nstore.subscribe(throttle(() => {\n    saveState(store.getState());\n}, 1000));\n\nexport default store;","export const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n}\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n    } catch (err) {\n        // Ignore write errors...\n    }\n}","import * as actions from \"../constants/action-types\";\n\nexport function fetchBooks(payload) {\n    return { type: actions.FETCH_BOOKS, payload }\n}\n\nexport function fetchBooklist(payload) {\n    return { type: actions.FETCH_BOOKLIST, payload }\n}\n\n// export function addBook(payload) {\n//     return { type: actions.ADD_BOOK, payload }\n// }\n\n// export function requestLogin(creds) {\n//     return {\n//       type: actions.LOGIN_REQUEST,\n//       isFetching: true,\n//       isAuthenticated: false,\n//       creds\n//     }\n//   }\n  \n// export function receiveLogin(user) {\n//     return {\n//       type: actions.LOGIN_SUCCESS,\n//       isFetching: false,\n//       isAuthenticated: true,\n//       id_token: user.id_token\n//     }\n//   }\n  \n// export function loginError(message) {\n//     return {\n//       type: actions.LOGIN_FAILURE,\n//       isFetching: false,\n//       isAuthenticated: false,\n//       message\n//     }\n//   }\n\nexport function loginUser(creds) {\n    return {\n        type: actions.LOGIN_SUCCESS,\n        loggedIn: true,\n        creds\n    }\n}\n\n\n// export function requestLogout() {\n//     return {\n//       type: actions.LOGOUT_REQUEST,\n//       isFetching: true,\n//       isAuthenticated: true,\n//       loggedIn: true\n//     }\n//   }\n  \n// export function receiveLogout() {\n//     return {\n//       type: actions.LOGOUT_SUCCESS,\n//       isFetching: false,\n//       isAuthenticated: false,\n//       loggedIn: false\n//     }\n//   }\n    \nexport function logoutUser() {\n    return {\n        type: actions.LOGOUT_SUCCESS,\n        loggedIn: false\n      }\n  }","// export const MY_URL = \"http://localhost:5000\"\n\n// export const MY_URL = \"54.70.185.24:5000\"\n\n// export const MY_URL = \"http://0.0.0.0:5000\"\n\nexport const MY_URL=\"http://54.70.185.24\"","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport '../static/App.css';\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { FormGroup, FormControl } from \"react-bootstrap\";\nimport { fetchBooks } from './actions';\nimport { MY_URL } from './secrets';\n\nclass SearchComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: '',\n      isLoading: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({input: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    fetch(MY_URL + '/createBookList/' + this.props.title, {\n        credentials: 'include',\n        method: 'GET'\n    })\n    .then(response => response.json())\n    .then(data => this.props.fetchBooks(data))\n  }\n\n  render() {\n    const {error} = this.state;\n    \n    if (error) {\n      return <div>Error: {error.message}</div>\n    }\n\n    return (\n      <div className=\"Search\">\n        <form onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <FormControl \n              type=\"text\" \n              className=\"input\" \n              placeholder=\"Search for books related to (enter a title)...\" \n              value={this.state.input} \n              onChange={this.handleChange}\n            />\n            <Link to={{pathname: \"/createBookList\", state: { title: this.state.input }}}>\n                <Button type=\"submit\">Search</Button>\n            </Link>\n          </FormGroup>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      bookresults: state.bookresults\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchBooks: (books) => dispatch(fetchBooks(books))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchComponent)","// https://react-bootstrap.github.io/components/dropdowns/\n\nimport React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\nimport { connect } from \"react-redux\";\n// import { bindActionCreators } from 'redux';\nimport '../static/App.css';\nimport { loginUser, logoutUser } from './actions'\n// import { fetchBooklist } from './actions';\nimport { Link } from \"react-router-dom\";\nimport { Button, ButtonGroup, ButtonToolbar, Dropdown } from \"react-bootstrap\";\nimport { FormGroup, FormControl, InputGroup } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport { Panel } from \"react-bootstrap\";\nimport { MY_URL } from './secrets';\n\nclass CustomToggle extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n\n        this.props.onClick(e);\n    }\n\n    render() {\n        return (\n        <a href=\"\" onClick={this.handleClick}>\n            {this.props.children}\n        </a>\n        );\n    }\n}\n\nclass CustomMenu extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            value: ''\n        };\n    }\n\n    handleChange(e) {\n        this.setState({ value: e.target.value });\n    }\n\n    // focusNext() {\n    //     const input = ReactDOM.findDOMNode(this.input);\n\n    //     if (input) {\n    //         input.focus();\n    //     }\n    // }\n\n    render() {\n        const { children } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className=\"dropdown-menu\" style={{ padding: '' }}>\n                {/* <FormControl\n                    ref={c => {\n                        this.input = c;\n                    }}\n                    type=\"text\"\n                    placeholder=\"Type to filter...\"\n                    onChange={this.handleChange}\n                    value={value}\n                /> */}\n                <ul className=\"list-unstyled\">\n                    {React.Children.toArray(children).filter(\n                        child => !value.trim() || child.props.children.indexOf(value) !== -1\n                    )}\n                </ul>\n            </div>\n        );\n    }\n}\n\nclass AuthMenuCustom extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        username: '',\n        // email: '',\n        password: '',\n        // loggedIn: false\n        showRegisterMessage: false\n      }\n  \n      this.handleLogin = this.handleLogin.bind(this);\n      this.handleLogout = this.handleLogout.bind(this);\n      // this.refresh = this.refresh.bind(this);\n      this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n\n        console.log(\"hitting here?\");\n\n        fetch(MY_URL + '/login', {\n        credentials: 'include',\n        method: 'POST',\n        body: data,\n        }) \n        .then(response => {\n            console.log('response', response)\n            if (response.status == 200){\n                this.props.loginUser(response);\n                this.props.loggedInCallback();\n                this.setState({ showRegisterMessage : false })\n            } else if (response.status == 401){\n                this.setState({ showRegisterMessage : true });\n            }\n        })\n        // .then(data => this.props.loginUser(data))\n        // .then(() => this.props.loggedInCallback())\n        // .then(() => this.props.fetchBooklist())    \n        // .then(() => this.refresh());   \n    }\n\n    handleLogout(e) {\n        e.preventDefault();\n\n        fetch(MY_URL + '/logout', {\n            credentials: 'include'\n        }) \n        .then(() => this.props.logoutUser()) \n        // .then(() => this.props.fetchBooklist())   \n        // .then(() => this.refresh());   \n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n        // console.log(this.props.username + \" \" + this.props.password);\n        console.log(this.state.username, this.state.password);\n    }\n\n    render(){\n\n        // if (this.state.loggedIn) {\n        if (this.props.loggedIn) {\n            return (\n            <div className=\"Nav\">\n                <div className=\"profile\">\n                <Col xs={12}>\n                    {/* <Image src={'https://via.placeholder.com/30'} alt=\"ProfilePic\" className=\"img-profile\" responsive/> */}\n                    {/* {this.state.username} */}\n                    <Button className=\"logoutbutton\" onClick={this.handleLogout}>Logout</Button>\n                </Col>\n                </div>\n            </div>\n            );\n        }\n\n        let authMenuMessage = \"Please login.\"\n        if (this.state.showRegisterMessage == true) {\n            authMenuMessage = \"Login unsuccessful. Please try again or register.\"\n        }\n\n        return (\n            <Dropdown id=\"dropdown-custom-menu\">\n                <CustomToggle bsRole=\"toggle\"><Button className=\"loginbutton\" bsStyle=\"primary\" type=\"submit\">Toggle Login</Button></CustomToggle>\n\n                <CustomMenu bsRole=\"menu\">\n                    <Panel className=\"LoginPanel\">\n                        <Panel.Body>\n                            <div className=\"App\">{authMenuMessage}</div>\n                            <ButtonToolbar>\n                                <form onSubmit={this.handleLogin}>\n                                    <Col xs={12}>\n                                    <FormGroup>\n                                        <InputGroup>\n                                            <FormControl type=\"text\" placeholder=\"Username\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                                            <FormControl type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                                        </InputGroup>\n                                        <ButtonGroup>\n                                            <Button className=\"btn-primary-dark\" type=\"submit\">Sign On</Button>\n                                            <Link to={{ pathname: '/register', state: { username: this.state.username, password: this.state.password } }}><Button>Register</Button></Link>\n                                        </ButtonGroup>\n                                    </FormGroup>\n                                    </Col>\n                                </form>\n                            </ButtonToolbar>\n                        </Panel.Body>\n                    </Panel>\n                </CustomMenu>\n\n            </Dropdown>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loggedIn: state.loggedIn,\n        // username: state.username,\n        // password: state.password\n        // booklist: state.booklist\n    }\n  }\n  \n  // function mapDispatchToProps(dispatch) {\n  //   return {\n  //     actions: {\n  //       loginUser: bindActionCreators(loginUser, dispatch),\n  //       logoutUser: bindActionCreators(logoutUser, dispatch)\n  //     }\n  //   };\n  // }\n  \n  const mapDispatchToProps = (dispatch) => ({\n    loginUser: (creds) => dispatch(loginUser(creds)),\n    logoutUser: () => dispatch(logoutUser()), \n    // fetchBooklist: () => dispatch(fetchBooklist()),\n  });\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(AuthMenuCustom)","import React, { Component } from 'react';\nimport '../static/App.css';\nimport { Button } from \"react-bootstrap\";\nimport { MY_URL } from './secrets';\n\nclass TrashButton extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          error: null,\n          isLoading: false\n        }\n      }\n\n    handleTrash = (e) => {\n        fetch(MY_URL + '/book/' + this.props.book_id + '/delete', {\n            credentials: 'include',\n        })\n        .then(response => response.json())\n        .then(data => console.log(data))\n        .then(() => this.props.refreshBooklist())\n        .catch((error) => {this.setState({isLoading: true, error})});\n      }\n  \n    render() {\n        const { error, isLoading } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        }\n        \n        if (isLoading) {\n        return <p>Loading...</p>\n        }\n\n        return (\n            <Button className=\"TrashBtn\" bsSize=\"xsmall\" onClick={this.handleTrash}>Remove</Button>\n        );\n    }\n}\n\nexport default TrashButton;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport '../static/App.css';\nimport { fetchBooklist } from './actions';\nimport TrashButton from './ButtonTrash';\nimport { Panel } from \"react-bootstrap\";\nimport { MY_URL } from './secrets';\n\nclass BooklistComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     books: [],\n        //     error: null,\n        //     isLoading: false\n        // };\n\n        this.refresh = this.refresh.bind(this)\n    }\n\n    componentDidMount() {\n      this.refresh()\n    }\n\n    refresh() {\n        this.setState({ isLoading: true});\n\n        fetch(MY_URL + '/booklist', {\n            credentials: 'include',\n        })\n        .then(response => response.json())\n        .then(data => this.props.fetchBooklist(data))\n        // .then(data => this.setState({ books: data, isLoading: false }))\n        // .catch((error) => {this.setState({isLoading: true, error})});\n    }\n\n    render() {\n        // const { books, error, isLoading } = this.state;\n        const { booklist } = this.props;\n\n        if (booklist && booklist.length !== 0) {\n            const listBooks = booklist.map((b) => <li key={b.book_id}>{b.title} <TrashButton book_id={b.book_id} refreshBooklist={this.refresh}/></li>);\n\n            return (\n                <div className=\"Booklist\">\n                    <Panel>\n                        <Panel.Heading>Best List Evar</Panel.Heading>\n                        <Panel.Body>{listBooks}</Panel.Body>\n                    </Panel>\n                </div>\n            );\n        }\n\n        // if (error) {\n        //     return <div>Error: {error.message}</div>;\n        // }\n\n        // if (isLoading) {\n        //     return <p>Loading...</p>\n        // }\n\n        // if (booklist.length === 0) {\n        //     return (\n        //         <div className=\"Booklist\">\n        //             <p>You have zero books in your list.</p>\n        //         </div>\n        //     );\n        // }\n\n        return (\n            <div className=\"Booklist\">\n                <Panel>\n                    <Panel.Body>You have zero books in your list.</Panel.Body>\n                </Panel>\n            </div>\n        );\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        booklist: state.booklist,\n        loggedIn: state.loggedIn\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchBooklist: (books) => dispatch(fetchBooklist(books))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooklistComponent)","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport '../static/App.css';\nimport { fetchBooklist } from './actions';\n\nimport SearchComponent from './Search';\nimport AuthMenuCustom from './AuthMenuCustom';\nimport BooklistComponent from './DisplayBooklist';\nimport { MY_URL } from './secrets';\n\nclass App extends Component {\n\n  // constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //     username: \"not logged in\",\n  //     loggedIn: false\n  //   }\n\n  // }\n\n  // handleLogIn(name, isLoggedIn) {\n  //   this.setState( { \n  //     username : name,\n  //     loggedIn : isLoggedIn\n  //   });\n  // }\n\n  fetchBooklist() {\n    fetch(MY_URL + '/booklist', {\n      credentials: 'include',\n    })\n    .then(response => response.json())\n    .then(data => this.props.fetchBooklist(data))\n  }\n\n  render() {\n\n    // const { dispatch, isAuthenticated, errorMessage } = this.props\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"row nav\">\n            <AuthMenuCustom loggedInCallback={() => this.fetchBooklist()}/>\n            {/* <AuthMenu loggedInCallback={() => this.fetchBooklist()}/> */}\n            {/* <div className=\"col-md-6 col-md-offset-3\">\n              <AuthMenu loggedInCallback={() => this.fetchBooklist()}/>\n            </div> */}\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"App-body\">\n                <SearchComponent/>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"App-body\">\n                <BooklistComponent/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      booklist: state.booklist,\n      loggedIn: state.loggedIn\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchBooklist: (books) => dispatch(fetchBooklist(books))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React, { Component } from 'react';\nimport '../static/App.css';\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nclass BackButton extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          error: null,\n          isLoading: false\n        }\n      }\n\n    render() {\n        const { error, isLoading } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        }\n        \n        if (isLoading) {\n        return <p>Loading...</p>\n        }\n\n        return (\n            <Link to=\"/\">\n                <Button bsStyle=\"primary\">Back</Button>\n            </Link>\n        );\n    }\n}\n\nexport default BackButton;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n// import { addBook } from './actions';\nimport '../static/App.css';\nimport { Button } from \"react-bootstrap\";\nimport { MY_URL } from './secrets';\n\nclass SaveButton extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          status: false,\n        //   error: null,\n        //   isLoading: false\n        }\n      }\n\n    handleSave = (e) => {\n        this.setState({status: true});\n        const title = this.props.title;\n\n        fetch(MY_URL + '/book/save', {\n            credentials: 'include',\n            method: 'POST',\n            body: title,\n        })\n        // .then(data => this.props.addBook(data))\n        // .then(response => response.json())\n        // .catch((error) => {this.setState({isLoading: true, error})});\n      }\n  \n    render() {\n        // const { status, error, isLoading } = this.state;\n        const { status } = this.state;\n\n        // if (error) {\n        //     return <div>Error: {error.message}</div>;\n        // }\n        \n        // if (isLoading) {\n        // return <p>Loading...</p>\n        // }\n\n        if (status) {\n            return (\n                <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\n            );\n        }\n\n        return (\n            <Button bsSize=\"xsmall\" onClick={this.handleSave}>Add</Button>\n        );\n    }\n}\n\n// const mapStateToProps = (state, ownProps) => {\n//     // let status = ownProps.status;\n//     return {\n//         // books: state.books\n//     }\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n//     // saveBook: (id) => { dispatch({type: 'ADD_BOOK', id: id}) }\n// }\n\n// const mapStateToProps = (state) => {\n//     return {\n//         booklist: state.booklist\n//     }\n// }\n\n// const mapDispatchToProps = (dispatch) => ({\n//     addBook: (book) => dispatch(addBook(book))\n// })\n\nexport default connect()(SaveButton)","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport '../static/App.css';\nimport AuthMenuCustom from './AuthMenuCustom';\nimport BackButton from './ButtonBackToMain';\nimport SaveButton from './ButtonSave';\nimport { fetchBooks } from './actions';\nimport { Panel } from \"react-bootstrap\";\nimport { MY_URL } from './secrets';\n\nclass SearchListComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // books: [],\n            error: null,\n            isLoading: false\n        };\n\n        this.refresh = this.refresh.bind(this)\n    }\n\n    componentDidMount() {\n      this.refresh()\n    }\n\n    refresh() {\n        this.setState({ isLoading: true});\n\n        fetch(MY_URL + '/createBookList/' + this.props.title, {\n            credentials: 'include',\n            method: 'GET'\n        })\n        .then(response => response.json())\n        .then(data => this.props.fetchBooks(data))\n        // .then(data => this.setState({ books: data, isLoading: false }))\n        .catch((error) => {this.setState({isLoading: true, error})});\n    }\n\n    handleLogIn(name, isLoggedIn) {\n        this.setState( { \n            username : name,\n            loggedIn : isLoggedIn\n        });\n    }\n\n    render() {\n        // const { books, error, isLoading } = this.state;\n        const { bookresults } = this.props;\n        const listBooks = bookresults.map((b) => <li key={b.book_id}>{b.title} <SaveButton title={b.title} refreshBooklist={this.refresh}/></li>);\n        \n        // if (error) {\n        //     return <div>Error: {error.message}</div>;\n        // }\n\n        // if (isLoading) {\n        //     return <p>Loading...</p>\n        // }\n\n        if (bookresults.length === 0) {\n            return (\n                <div className=\"App\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <AuthMenuCustom authenticating={this.handleLogIn} />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"App-body\">\n                                    <div className=\"Booklist\">\n                                        <Panel>\n                                            <Panel.Body>There are zero results.</Panel.Body>\n                                        </Panel>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <BackButton/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"App\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <AuthMenuCustom authenticating={this.handleLogIn} />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"App-body\">\n                                <div className=\"Booklist\">\n                                    <Panel>\n                                        <Panel.Heading>List by {this.props.title}</Panel.Heading>\n                                        <Panel.Body>{listBooks}</Panel.Body>\n                                    </Panel>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <BackButton/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        bookresults: state.bookresults\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchBooks: (books) => dispatch(fetchBooks(books))\n  })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchListComponent)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport '../static/App.css';\nimport '../static/Register.css';\n// import { fetchBooklist } from './actions';\nimport { loginUser } from './actions'\nimport BackButton from './ButtonBackToMain';\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport { FormGroup, FormControl } from \"react-bootstrap\";\nimport { MY_URL } from './secrets';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        // const {username, password} = this.props.location.state\n\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            error: null,\n            isLoading: false,\n            showRegFailMessage: false\n        };\n\n        this.handleRegister = this.handleRegister.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleRegister(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n\n        console.log(\"What about here?\");\n\n        fetch(MY_URL + '/register', {\n            credentials: 'include',\n            method: 'POST',\n            body: data\n        })\n        .then(response => {\n            response.json()\n            if (response.status == 400) {\n                this.setState({ showRegFailMessage: true });\n            } else {\n                this.props.loginUser(response);\n                this.setState({ showRegFailMessage: true });\n                this.props.history.goBack();\n            }\n        })\n        // .then(data => this.props.loginUser(data))\n        // .then(() => this.props.loggedInCallback())\n        // .then(() => { this.props.history.goBack();})\n        // .catch((error) => {this.setState({isLoading: true, error})});\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n        console.log(this.state.username + \" \" + this.state.password);\n      }\n\n    render() {\n        // const { error, isLoading } = this.state; \n\n        // if (error) {\n        //     return <div>Error: {error.message}</div>;\n        // }\n\n        // if (isLoading) {\n        //     return <p>Loading...</p>\n        // }\n\n        let registerMenuMessage = \"Please register.\"\n        if (this.state.showRegFailMessage == true) {\n            registerMenuMessage = \"Register unsuccessful, user already exists. Please try again.\"\n        }\n\n        return (\n            <div className=\"App\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"RegisterForm signup-screen center\">\n                                <div className=\"App\">{registerMenuMessage}</div>\n                                <form onSubmit={this.handleRegister}>\n                                    <FormGroup controlId=\"formBasicUsername\">\n                                        <FormControl type=\"text\" name=\"username\" placeholder=\"Username\" required value={this.state.username} onChange={this.handleChange} />\n                                    </FormGroup>\n                                    <FormGroup controlId=\"formBasicEmail\">\n                                        <FormControl type=\"email\" name=\"email\" placeholder=\"Email\" required value={this.state.email} onChange={this.handleChange}/>\n                                    </FormGroup>\n                                    <FormGroup controlId=\"formBasicPassword\">\n                                        <FormControl type=\"password\" name=\"password\" placeholder=\"Password\" required value={this.state.password} onChange={this.handleChange} />\n                                    </FormGroup>\n                                    <ButtonGroup>\n                                        <Button type=\"submit\">Register</Button>\n                                        <BackButton/>\n                                    </ButtonGroup>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        // booklist: state.booklist,\n        loggedIn: state.loggedIn,\n        username: state.username,\n        password: state.password\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    loginUser:(creds) => dispatch(loginUser(creds)),\n    // fetchBooklist: (books) => dispatch(fetchBooklist(books))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store/store\";\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport './static/index.css';\n\nimport App from './js/App';\nimport SearchListComponent from './js/SearchResults'\n// import SearchComponent from './js/Search';\n\nimport * as serviceWorker from './js/serviceWorker';\nimport Register from './js/Register';\n// import SearchComponent from './js/Search';\n\n// ReactDOM.render(<App/>, document.getElementById('root'));\nReactDOM.render((\n    <Provider store={store}>\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={App}/>\n                <Route path=\"/createBookList\" render={ (routeInfo, ...rest) => <SearchListComponent title={routeInfo.location.state.title}/> } />\n                <Route path=\"/register\" component={Register}/>\n            </Switch>\n        </BrowserRouter>\n    </Provider>\n    ), document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}